{"ast":null,"code":"import * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from './sidebar-container.component';\nimport * as ɵngcc2 from '@angular/common';\nvar _c0 = [\"sidebar\"];\nvar _c1 = [\"*\"];\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Inject, Input, Optional, Output, PLATFORM_ID, ViewChild } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { SidebarContainer } from './sidebar-container.component';\nimport { isLTR, isIOS } from './utils';\nvar Sidebar = function () {\n  function Sidebar(_container, _ref, platformId) {\n    this._container = _container;\n    this._ref = _ref;\n    this.opened = false;\n    this.openedChange = new EventEmitter();\n    this.mode = 'over';\n    this.dock = false;\n    this.dockedSize = '0px';\n    this.position = 'start';\n    this.animate = true;\n    this.autoCollapseOnInit = true;\n    this.trapFocus = false;\n    this.autoFocus = true;\n    this.showBackdrop = false;\n    this.closeOnClickBackdrop = false;\n    this.closeOnClickOutside = false;\n    this.keyClose = false;\n    this.keyCode = 27;\n    this.onContentInit = new EventEmitter();\n    this.onOpenStart = new EventEmitter();\n    this.onOpened = new EventEmitter();\n    this.onCloseStart = new EventEmitter();\n    this.onClosed = new EventEmitter();\n    this.onTransitionEnd = new EventEmitter();\n    this.onModeChange = new EventEmitter();\n    this.onPositionChange = new EventEmitter();\n    this._onRerender = new EventEmitter();\n    this._focusableElementsString = 'a[href], area[href], input:not([disabled]), select:not([disabled]),' + 'textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex], [contenteditable]';\n    this._tabIndexAttr = '__tabindex__';\n    this._tabIndexIndicatorAttr = '__ngsidebar-tabindex__';\n    this._clickEvent = 'click';\n    this._onClickOutsideAttached = false;\n    this._onKeyDownAttached = false;\n    this._onResizeAttached = false;\n    if (!this._container) {\n      throw new Error('<ng-sidebar> must be inside a <ng-sidebar-container>. ' + 'See https://github.com/arkon/ng-sidebar#usage for more info.');\n    }\n    this._isBrowser = isPlatformBrowser(platformId);\n    if (this._isBrowser && isIOS() && !('onclick' in window)) {\n      this._clickEvent = 'touchstart';\n    }\n    this._normalizePosition();\n    this.open = this.open.bind(this);\n    this.close = this.close.bind(this);\n    this._onTransitionEnd = this._onTransitionEnd.bind(this);\n    this._onFocusTrap = this._onFocusTrap.bind(this);\n    this._onClickOutside = this._onClickOutside.bind(this);\n    this._onKeyDown = this._onKeyDown.bind(this);\n    this._collapse = this._collapse.bind(this);\n  }\n  Sidebar.prototype.ngOnInit = function () {\n    if (!this._isBrowser) {\n      return;\n    }\n    if (this.animate) {\n      this._shouldAnimate = true;\n      this.animate = false;\n    }\n    this._container._addSidebar(this);\n    if (this.autoCollapseOnInit) {\n      this._collapse();\n    }\n  };\n  Sidebar.prototype.ngAfterContentInit = function () {\n    this.onContentInit.emit();\n  };\n  Sidebar.prototype.ngOnChanges = function (changes) {\n    var _this = this;\n    if (!this._isBrowser) {\n      return;\n    }\n    if (changes['animate'] && this._shouldAnimate) {\n      this._shouldAnimate = changes['animate'].currentValue;\n    }\n    if (changes['closeOnClickOutside']) {\n      if (changes['closeOnClickOutside'].currentValue) {\n        this._initCloseClickListener();\n      } else {\n        this._destroyCloseClickListener();\n      }\n    }\n    if (changes['keyClose']) {\n      if (changes['keyClose'].currentValue) {\n        this._initCloseKeyDownListener();\n      } else {\n        this._destroyCloseKeyDownListener();\n      }\n    }\n    if (changes['position']) {\n      this._normalizePosition();\n      setTimeout(function () {\n        _this.onPositionChange.emit(changes['position'].currentValue);\n      });\n    }\n    if (changes['mode']) {\n      setTimeout(function () {\n        _this.onModeChange.emit(changes['mode'].currentValue);\n      });\n    }\n    if (changes['dock']) {\n      this.triggerRerender();\n    }\n    if (changes['opened']) {\n      if (this._shouldAnimate) {\n        this.animate = true;\n        this._shouldAnimate = false;\n      }\n      if (changes['opened'].currentValue) {\n        this.open();\n      } else {\n        this.close();\n      }\n    }\n    if (changes['autoCollapseHeight'] || changes['autoCollapseWidth']) {\n      this._initCollapseListeners();\n    }\n  };\n  Sidebar.prototype.ngOnDestroy = function () {\n    if (!this._isBrowser) {\n      return;\n    }\n    this._destroyCloseListeners();\n    this._destroyCollapseListeners();\n    this._container._removeSidebar(this);\n  };\n  Sidebar.prototype.open = function () {\n    var _this = this;\n    if (!this._isBrowser) {\n      return;\n    }\n    this.opened = true;\n    this.openedChange.emit(true);\n    this.onOpenStart.emit();\n    this._ref.detectChanges();\n    setTimeout(function () {\n      if (_this.animate && !_this._isModeSlide) {\n        _this._elSidebar.nativeElement.addEventListener('transitionend', _this._onTransitionEnd);\n      } else {\n        _this._setFocused();\n        _this._initCloseListeners();\n        if (_this.opened) {\n          _this.onOpened.emit();\n        }\n      }\n    });\n  };\n  Sidebar.prototype.close = function () {\n    var _this = this;\n    if (!this._isBrowser) {\n      return;\n    }\n    this.opened = false;\n    this.openedChange.emit(false);\n    this.onCloseStart.emit();\n    this._ref.detectChanges();\n    setTimeout(function () {\n      if (_this.animate && !_this._isModeSlide) {\n        _this._elSidebar.nativeElement.addEventListener('transitionend', _this._onTransitionEnd);\n      } else {\n        _this._setFocused();\n        _this._destroyCloseListeners();\n        if (!_this.opened) {\n          _this.onClosed.emit();\n        }\n      }\n    });\n  };\n  Sidebar.prototype.triggerRerender = function () {\n    var _this = this;\n    if (!this._isBrowser) {\n      return;\n    }\n    setTimeout(function () {\n      _this._onRerender.emit();\n    });\n  };\n  Sidebar.prototype._getStyle = function () {\n    var transformStyle = '';\n    if (!this.opened) {\n      var transformDir = 'translate' + (this._isLeftOrRight ? 'X' : 'Y');\n      var translateAmt = (this._isLeftOrTop ? '-' : '') + \"100%\";\n      transformStyle = transformDir + \"(\" + translateAmt + \")\";\n      if (this.dock && this._dockedSize > 0 && !(this._isModeSlide && this.opened)) {\n        transformStyle += \" \" + transformDir + \"(\" + (this._isLeftOrTop ? '+' : '-') + this.dockedSize + \")\";\n      }\n    }\n    return {\n      webkitTransform: transformStyle,\n      transform: transformStyle\n    };\n  };\n  Sidebar.prototype._onTransitionEnd = function (e) {\n    if (e.target === this._elSidebar.nativeElement && e.propertyName.endsWith('transform')) {\n      this._setFocused();\n      if (this.opened) {\n        this._initCloseListeners();\n        this.onOpened.emit();\n      } else {\n        this._destroyCloseListeners();\n        this.onClosed.emit();\n      }\n      this.onTransitionEnd.emit();\n      this._elSidebar.nativeElement.removeEventListener('transitionend', this._onTransitionEnd);\n    }\n  };\n  Object.defineProperty(Sidebar.prototype, \"_shouldTrapFocus\", {\n    get: function () {\n      return this.opened && this.trapFocus;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Sidebar.prototype._focusFirstItem = function () {\n    if (this._focusableElements && this._focusableElements.length > 0) {\n      this._focusableElements[0].focus();\n    }\n  };\n  Sidebar.prototype._onFocusTrap = function (e) {\n    if (this._shouldTrapFocus && !this._elSidebar.nativeElement.contains(e.target)) {\n      this._focusFirstItem();\n    }\n  };\n  Sidebar.prototype._setFocused = function () {\n    this._focusableElements = Array.from(this._elSidebar.nativeElement.querySelectorAll(this._focusableElementsString));\n    if (this.opened) {\n      this._focusedBeforeOpen = document.activeElement;\n      for (var _i = 0, _a = this._focusableElements; _i < _a.length; _i++) {\n        var el = _a[_i];\n        var prevTabIndex = el.getAttribute(this._tabIndexAttr);\n        var wasTabIndexSet = el.getAttribute(this._tabIndexIndicatorAttr) !== null;\n        if (prevTabIndex !== null) {\n          el.setAttribute('tabindex', prevTabIndex);\n          el.removeAttribute(this._tabIndexAttr);\n        } else if (wasTabIndexSet) {\n          el.removeAttribute('tabindex');\n          el.removeAttribute(this._tabIndexIndicatorAttr);\n        }\n      }\n      if (this.autoFocus) {\n        this._focusFirstItem();\n      }\n      document.addEventListener('focus', this._onFocusTrap, true);\n    } else {\n      for (var _b = 0, _c = this._focusableElements; _b < _c.length; _b++) {\n        var el = _c[_b];\n        var existingTabIndex = el.getAttribute('tabindex');\n        el.setAttribute('tabindex', '-1');\n        el.setAttribute(this._tabIndexIndicatorAttr, '');\n        if (existingTabIndex !== null) {\n          el.setAttribute(this._tabIndexAttr, existingTabIndex);\n        }\n      }\n      document.removeEventListener('focus', this._onFocusTrap, true);\n      if (this._focusedBeforeOpen && this.autoFocus && this._isModeOver) {\n        this._focusedBeforeOpen.focus();\n        this._focusedBeforeOpen = null;\n      }\n    }\n  };\n  Sidebar.prototype._initCloseListeners = function () {\n    this._initCloseClickListener();\n    this._initCloseKeyDownListener();\n  };\n  Sidebar.prototype._initCloseClickListener = function () {\n    var _this = this;\n    setTimeout(function () {\n      if (_this.opened && _this.closeOnClickOutside && !_this._onClickOutsideAttached) {\n        document.addEventListener(_this._clickEvent, _this._onClickOutside);\n        _this._onClickOutsideAttached = true;\n      }\n    });\n  };\n  Sidebar.prototype._initCloseKeyDownListener = function () {\n    var _this = this;\n    setTimeout(function () {\n      if (_this.opened && _this.keyClose && !_this._onKeyDownAttached) {\n        document.addEventListener('keydown', _this._onKeyDown);\n        _this._onKeyDownAttached = true;\n      }\n    });\n  };\n  Sidebar.prototype._destroyCloseListeners = function () {\n    this._destroyCloseClickListener();\n    this._destroyCloseKeyDownListener();\n  };\n  Sidebar.prototype._destroyCloseClickListener = function () {\n    if (this._onClickOutsideAttached) {\n      document.removeEventListener(this._clickEvent, this._onClickOutside);\n      this._onClickOutsideAttached = false;\n    }\n  };\n  Sidebar.prototype._destroyCloseKeyDownListener = function () {\n    if (this._onKeyDownAttached) {\n      document.removeEventListener('keydown', this._onKeyDown);\n      this._onKeyDownAttached = false;\n    }\n  };\n  Sidebar.prototype._onClickOutside = function (e) {\n    if (this._onClickOutsideAttached && this._elSidebar && !this._elSidebar.nativeElement.contains(e.target)) {\n      this.close();\n    }\n  };\n  Sidebar.prototype._onKeyDown = function (e) {\n    e = e || window.event;\n    if (e.keyCode === this.keyCode) {\n      this.close();\n    }\n  };\n  Sidebar.prototype._initCollapseListeners = function () {\n    var _this = this;\n    if (this.autoCollapseHeight || this.autoCollapseWidth) {\n      setTimeout(function () {\n        if (!_this._onResizeAttached) {\n          window.addEventListener('resize', _this._collapse);\n          _this._onResizeAttached = true;\n        }\n      });\n    }\n  };\n  Sidebar.prototype._destroyCollapseListeners = function () {\n    if (this._onResizeAttached) {\n      window.removeEventListener('resize', this._collapse);\n      this._onResizeAttached = false;\n    }\n  };\n  Sidebar.prototype._collapse = function () {\n    var winHeight = window.innerHeight;\n    var winWidth = window.innerWidth;\n    if (this.autoCollapseHeight) {\n      if (winHeight <= this.autoCollapseHeight && this.opened) {\n        this._wasCollapsed = true;\n        this.close();\n      } else if (winHeight > this.autoCollapseHeight && this._wasCollapsed) {\n        this.open();\n        this._wasCollapsed = false;\n      }\n    }\n    if (this.autoCollapseWidth) {\n      if (winWidth <= this.autoCollapseWidth && this.opened) {\n        this._wasCollapsed = true;\n        this.close();\n      } else if (winWidth > this.autoCollapseWidth && this._wasCollapsed) {\n        this.open();\n        this._wasCollapsed = false;\n      }\n    }\n  };\n  Object.defineProperty(Sidebar.prototype, \"_height\", {\n    get: function () {\n      if (this._elSidebar.nativeElement) {\n        return this._isDocked ? this._dockedSize : this._elSidebar.nativeElement.offsetHeight;\n      }\n      return 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sidebar.prototype, \"_width\", {\n    get: function () {\n      if (this._elSidebar.nativeElement) {\n        return this._isDocked ? this._dockedSize : this._elSidebar.nativeElement.offsetWidth;\n      }\n      return 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sidebar.prototype, \"_dockedSize\", {\n    get: function () {\n      return parseFloat(this.dockedSize);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sidebar.prototype, \"_isModeOver\", {\n    get: function () {\n      return this.mode === 'over';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sidebar.prototype, \"_isModePush\", {\n    get: function () {\n      return this.mode === 'push';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sidebar.prototype, \"_isModeSlide\", {\n    get: function () {\n      return this.mode === 'slide';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sidebar.prototype, \"_isDocked\", {\n    get: function () {\n      return this.dock && this.dockedSize && !this.opened;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sidebar.prototype, \"_isLeftOrTop\", {\n    get: function () {\n      return this.position === 'left' || this.position === 'top';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sidebar.prototype, \"_isLeftOrRight\", {\n    get: function () {\n      return this.position === 'left' || this.position === 'right';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Sidebar.prototype, \"_isInert\", {\n    get: function () {\n      return !this.opened && !this.dock;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Sidebar.prototype._normalizePosition = function () {\n    var ltr = isLTR();\n    if (this.position === 'start') {\n      this.position = ltr ? 'left' : 'right';\n    } else if (this.position === 'end') {\n      this.position = ltr ? 'right' : 'left';\n    }\n  };\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], Sidebar.prototype, \"opened\", void 0);\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], Sidebar.prototype, \"openedChange\", void 0);\n  __decorate([Input(), __metadata(\"design:type\", String)], Sidebar.prototype, \"mode\", void 0);\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], Sidebar.prototype, \"dock\", void 0);\n  __decorate([Input(), __metadata(\"design:type\", String)], Sidebar.prototype, \"dockedSize\", void 0);\n  __decorate([Input(), __metadata(\"design:type\", String)], Sidebar.prototype, \"position\", void 0);\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], Sidebar.prototype, \"animate\", void 0);\n  __decorate([Input(), __metadata(\"design:type\", Number)], Sidebar.prototype, \"autoCollapseHeight\", void 0);\n  __decorate([Input(), __metadata(\"design:type\", Number)], Sidebar.prototype, \"autoCollapseWidth\", void 0);\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], Sidebar.prototype, \"autoCollapseOnInit\", void 0);\n  __decorate([Input(), __metadata(\"design:type\", String)], Sidebar.prototype, \"sidebarClass\", void 0);\n  __decorate([Input(), __metadata(\"design:type\", String)], Sidebar.prototype, \"ariaLabel\", void 0);\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], Sidebar.prototype, \"trapFocus\", void 0);\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], Sidebar.prototype, \"autoFocus\", void 0);\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], Sidebar.prototype, \"showBackdrop\", void 0);\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], Sidebar.prototype, \"closeOnClickBackdrop\", void 0);\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], Sidebar.prototype, \"closeOnClickOutside\", void 0);\n  __decorate([Input(), __metadata(\"design:type\", Boolean)], Sidebar.prototype, \"keyClose\", void 0);\n  __decorate([Input(), __metadata(\"design:type\", Number)], Sidebar.prototype, \"keyCode\", void 0);\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], Sidebar.prototype, \"onContentInit\", void 0);\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], Sidebar.prototype, \"onOpenStart\", void 0);\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], Sidebar.prototype, \"onOpened\", void 0);\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], Sidebar.prototype, \"onCloseStart\", void 0);\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], Sidebar.prototype, \"onClosed\", void 0);\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], Sidebar.prototype, \"onTransitionEnd\", void 0);\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], Sidebar.prototype, \"onModeChange\", void 0);\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], Sidebar.prototype, \"onPositionChange\", void 0);\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], Sidebar.prototype, \"_onRerender\", void 0);\n  __decorate([ViewChild('sidebar', {\n    static: false\n  }), __metadata(\"design:type\", ElementRef)], Sidebar.prototype, \"_elSidebar\", void 0);\n  Sidebar = __decorate([__param(0, Optional()), __param(2, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [SidebarContainer, ChangeDetectorRef, Object])], Sidebar);\n  Sidebar.ɵfac = function Sidebar_Factory(t) {\n    return new (t || Sidebar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.SidebarContainer, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n  Sidebar.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: Sidebar,\n    selectors: [[\"ng-sidebar\"]],\n    viewQuery: function Sidebar_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._elSidebar = _t.first);\n      }\n    },\n    inputs: {\n      opened: \"opened\",\n      mode: \"mode\",\n      dock: \"dock\",\n      dockedSize: \"dockedSize\",\n      position: \"position\",\n      animate: \"animate\",\n      autoCollapseOnInit: \"autoCollapseOnInit\",\n      trapFocus: \"trapFocus\",\n      autoFocus: \"autoFocus\",\n      showBackdrop: \"showBackdrop\",\n      closeOnClickBackdrop: \"closeOnClickBackdrop\",\n      closeOnClickOutside: \"closeOnClickOutside\",\n      keyClose: \"keyClose\",\n      keyCode: \"keyCode\",\n      autoCollapseHeight: \"autoCollapseHeight\",\n      autoCollapseWidth: \"autoCollapseWidth\",\n      sidebarClass: \"sidebarClass\",\n      ariaLabel: \"ariaLabel\"\n    },\n    outputs: {\n      openedChange: \"openedChange\",\n      onContentInit: \"onContentInit\",\n      onOpenStart: \"onOpenStart\",\n      onOpened: \"onOpened\",\n      onCloseStart: \"onCloseStart\",\n      onClosed: \"onClosed\",\n      onTransitionEnd: \"onTransitionEnd\",\n      onModeChange: \"onModeChange\",\n      onPositionChange: \"onPositionChange\",\n      _onRerender: \"_onRerender\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c1,\n    decls: 3,\n    vars: 15,\n    consts: [[\"role\", \"complementary\", 3, \"ngClass\", \"ngStyle\"], [\"sidebar\", \"\"]],\n    template: function Sidebar_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"aside\", 0, 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMapInterpolate3(\"ng-sidebar ng-sidebar--\", ctx.opened ? \"opened\" : \"closed\", \" ng-sidebar--\", ctx.position, \" ng-sidebar--\", ctx.mode, \"\");\n        ɵngcc0.ɵɵclassProp(\"ng-sidebar--docked\", ctx._isDocked)(\"ng-sidebar--inert\", ctx._isInert)(\"ng-sidebar--animate\", ctx.animate);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.sidebarClass)(\"ngStyle\", ctx._getStyle());\n        ɵngcc0.ɵɵattribute(\"aria-hidden\", !ctx.opened)(\"aria-label\", ctx.ariaLabel);\n      }\n    },\n    dependencies: [ɵngcc2.NgClass, ɵngcc2.NgStyle],\n    styles: [\".ng-sidebar[_ngcontent-%COMP%] {\\n      -webkit-overflow-scrolling: touch;\\n      overflow: auto;\\n      pointer-events: auto;\\n      position: absolute;\\n      touch-action: auto;\\n      will-change: initial;\\n      z-index: 2;\\n    }\\n\\n    .ng-sidebar--left[_ngcontent-%COMP%] {\\n      bottom: 0;\\n      left: 0;\\n      top: 0;\\n    }\\n\\n    .ng-sidebar--right[_ngcontent-%COMP%] {\\n      bottom: 0;\\n      right: 0;\\n      top: 0;\\n    }\\n\\n    .ng-sidebar--top[_ngcontent-%COMP%] {\\n      left: 0;\\n      right: 0;\\n      top: 0;\\n    }\\n\\n    .ng-sidebar--bottom[_ngcontent-%COMP%] {\\n      bottom: 0;\\n      left: 0;\\n      right: 0;\\n    }\\n\\n    .ng-sidebar--inert[_ngcontent-%COMP%] {\\n      pointer-events: none;\\n      touch-action: none;\\n      will-change: transform;\\n    }\\n\\n    .ng-sidebar--animate[_ngcontent-%COMP%] {\\n      -webkit-transition: -webkit-transform 0.3s cubic-bezier(0, 0, 0.3, 1);\\n      transition: transform 0.3s cubic-bezier(0, 0, 0.3, 1);\\n    }\"],\n    changeDetection: 0\n  });\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n  return Sidebar;\n}();\nexport { Sidebar };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}