{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\n/** SystemJsNgModuleLoader  */\n\nimport { from } from \"rxjs\";\nimport { filter, map } from \"rxjs/operators\";\nimport { DOCUMENT } from \"@angular/common\";\nimport { NavigationStart } from \"@angular/router\";\nimport { gsap } from 'gsap';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./secciones/nuevohero/servicios/bodyToggle.service\";\nimport * as i4 from \"./secciones/nuevohero/servicios/flechaState.service\";\nimport * as i5 from \"./secciones/nuevohero/servicios/backgroundToggle.service\";\nimport * as i6 from \"./secciones/botonswitch/botonswitch.component\";\nimport * as i7 from \"ng-particles\";\nimport * as i8 from \"./secciones/nuevohero/nuevohero.component\";\nimport * as i9 from \"./secciones/webapp/webappmarco/componentes/webappmarco.component\";\nconst _c0 = [\"body\"];\nconst _c1 = [\"btncontainer\"];\nconst _c2 = [\"textobtn\"];\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(document, render, viewport, route, routeActivated, bodyserv, flechaserv, stateserv) {\n      this.document = document;\n      this.render = render;\n      this.viewport = viewport;\n      this.route = route;\n      this.routeActivated = routeActivated;\n      this.bodyserv = bodyserv;\n      this.flechaserv = flechaserv;\n      this.stateserv = stateserv;\n      this.id = \"tsparticles\"; // variable para cambiar de valores al presionar el toggle superior\n\n      this.cantparticles = 50;\n      /*\r\n      width: number = 100;\r\n      height: number = 100;\r\n      myStyle: Object = {\r\n        'position': 'fixed',\r\n        'width': '100%',\r\n        'height': '100%',\r\n        'top': 0,\r\n        'left': 0,\r\n        'right': 0,\r\n        'bottom': 0,\r\n      };\r\n      myParams: object = {\r\n       \r\n        \"particles\": {\r\n          \"number\": {\r\n            \"value\": this.cantparticles,\r\n            \"density\": {\r\n              \"enable\": true,\r\n              \"value_area\": 800\r\n            }\r\n          },\r\n          \"color\": {\r\n            \"value\": \"#141414\"\r\n          },\r\n          \"shape\": {\r\n            \"type\": \"circle\",\r\n            \"stroke\": {\r\n              \"width\": 1,\r\n              \"color\": \"#000\"\r\n            },\r\n            \"polygon\": {\r\n              \"nb_sides\": 5\r\n            },\r\n            \"image\": {\r\n              \"src\": \"img/github.svg\",\r\n              \"width\": 100,\r\n              \"height\": 100\r\n            }\r\n          },\r\n          \"opacity\": {\r\n            \"value\": 1,\r\n            \"random\": true,\r\n            \"anim\": {\r\n              \"enable\": true,\r\n              \"speed\": 1,\r\n              \"opacity_min\": 0,\r\n              \"sync\": false\r\n            }\r\n          },\r\n          \"size\": {\r\n            \"value\": 4,\r\n            \"random\": true,\r\n            \"anim\": {\r\n              \"enable\": false,\r\n              \"speed\": 4,\r\n              \"size_min\": 0.4,\r\n              \"sync\": false\r\n            }\r\n          },\r\n          \"line_linked\": {\r\n            \"enable\": false,\r\n            \"distance\": 200,\r\n            \"color\": \"#ffffff\",\r\n            \"opacity\": 0.8,\r\n            \"width\": 1\r\n          },\r\n          \"move\": {\r\n            \"enable\": true,\r\n            \"speed\": 1,\r\n            \"direction\": \"top\",\r\n            \"random\": true,\r\n            \"straight\": false,\r\n            \"out_mode\": \"bounce\",\r\n            \"bounce\": true,\r\n            \"attract\": {\r\n              \"enable\": true,\r\n              \"rotateX\": 600,\r\n              \"rotateY\": 600\r\n            }\r\n          }\r\n        },\r\n        \"interactivity\": {\r\n          \"detect_on\": \"window\",\r\n          \"events\": {\r\n            \"onhover\": {\r\n              \"enable\": true,\r\n              \"mode\": \"bubble\"\r\n            },\r\n            \"onclick\": {\r\n              \"enable\": false,\r\n              \"mode\": \"repulse\"\r\n            },\r\n            \"resize\": true\r\n          },\r\n          \"modes\": {\r\n            \"grab\": {\r\n              \"distance\": 400,\r\n              \"line_linked\": {\r\n                \"opacity\": 1\r\n              }\r\n            },\r\n            \"bubble\": {\r\n              \"distance\": 250,\r\n              \"size\": 0,\r\n              \"duration\": 2,\r\n              \"opacity\": 0,\r\n              \"speed\": 3\r\n            },\r\n            \"repulse\": {\r\n              \"distance\": 400,\r\n              \"duration\": 0.7\r\n            },\r\n            \"push\": {\r\n              \"particles_nb\": 4\r\n            },\r\n            \"remove\": {\r\n              \"particles_nb\": 2\r\n            }\r\n          }\r\n        },\r\n        \"retina_detect\": true\r\n      };\r\n      */\n\n      /* or the classic JavaScript object */\n\n      this.particlesOptions = {\n        background: {\n          color: {\n            value: {\n              color: \"#30323C\"\n            },\n\n            /*\r\n            value: {\r\n              \"r\": 255,\r\n              \"g\": 255,\r\n              \"b\": 255,\r\n              \"a\": 0\r\n              #30323C\r\n            }\r\n            */\n            \"zIndex\": -1\n          }\n        },\n        fpsLimit: 60,\n        interactivity: {\n          detect_on: \"canvas\",\n          events: {\n            onClick: {\n              enable: false,\n              mode: \"push\"\n            },\n            onHover: {\n              enable: false,\n              mode: \"repulse\",\n              parallax: {\n                enable: false,\n                force: 60,\n                smooth: 10\n              }\n            },\n            resize: true\n          },\n          modes: {\n            bubble: {\n              distance: 400,\n              duration: 2,\n              opacity: 0.8,\n              size: 40\n            },\n            push: {\n              quantity: 4\n            },\n            repulse: {\n              distance: 200,\n              duration: 0.4\n            }\n          }\n        },\n        particles: {\n          color: {\n            value: \"#121212\"\n          },\n          links: {\n            color: \"#ffffff\",\n            distance: 150,\n            enable: false,\n            opacity: 0.8,\n            width: 1\n          },\n          move: {\n            direction: \"none\",\n            enable: true,\n            outModes: \"bounce\",\n            random: false,\n            speed: 2,\n            straight: false\n          },\n          number: {\n            density: {\n              enable: true,\n              area: 800\n            },\n            value: 60\n          },\n          opacity: {\n            value: 0.5\n          },\n          shape: {\n            type: \"circle\"\n          },\n          size: {\n            value: {\n              min: 1,\n              max: 5\n            }\n          }\n        },\n        \"fullScreen\": {\n          \"enable\": true,\n          \"zIndex\": -1\n        },\n        detectRetina: false\n      };\n      /* CARGANDO CIRCULO */\n\n      this.showOverlay = true;\n      this._opened = false;\n      this.title = \"Gaston Ale Dev\";\n      this.over = false; //========== contador de veces quellega al bottom\n\n      this.counter = 0;\n      /* ESTE EVENTO SERA TRIGGER COMPONENTE SOBREMI AL CARGARSE APP COMPONENT ROOT */\n\n      this.boleanoEmitir = new EventEmitter();\n    }\n\n    particlesLoaded(container) {\n      console.log(container);\n      container.particles.addParticle();\n    }\n\n    particlesInit(main) {\n      console.log(main); // Starting from 1.19.0 you can add custom presets or shape here, using the current tsParticles instance (main)\n    }\n\n    ngOnInit() {\n      this.counter++;\n      this.isVideo$ = this.stateserv.state$.pipe(map(state => state.bgToggle));\n      this.route.events.subscribe(ruta => {\n        if (ruta instanceof NavigationStart) {\n          console.log(\"inicia ahora el navigationStart\");\n          this.currentRoute = ruta.url;\n          console.log(\"RUTA ACTUAL DE APP COMPONENT: \" + this.currentRoute);\n          /*\r\n          if(this.currentRoute != \"/nuevohero\"){\r\n            console.log(\"inicia ahora cualquier ruta de webappmarco\");\r\n            window.scrollTo(0, document.body.scrollHeight);\r\n          }else{\r\n                    } */\n\n          if (this.currentRoute == \"/nuevohero\" || this.currentRoute == \"/\") {\n            this.currentRoute = \"/nuevohero\";\n            console.log(\"TIENE QUE QUEDARSE EN HERO\");\n          } else {\n            console.log(\"TIENE QUE BAJAR A WEBAPP\");\n            window.scrollTo(0, document.body.scrollHeight);\n          }\n        }\n      });\n      gsap.from('.hero__subtitulo', {\n        y: 40,\n        duration: 0.5,\n        delay: 1.5\n      });\n      gsap.from('.hero__subtitulo1', {\n        y: 50,\n        duration: 0.5,\n        delay: 2\n      });\n      /* this.scrollgsap(); */\n\n      this.boleanoEmitir.emit(true); //create the \"Hello world\" observable\n\n      const myObs = from(\"HOLA GASTON\"); //apply the filter operator\n\n      const filteredObs = myObs.pipe(filter(char => char != \" \")); //subscribe to the filtered observable\n\n      const subscription = filteredObs.subscribe(char => console.log(char)); //this.load();\n    }\n\n    ngAfterViewInit() {\n      this.isVideo$.subscribe(data => {\n        if (data) {\n          //Cuando el video este reproduciendo bajaremos cantidad de particulas\n          this.cantparticles = 50;\n          console.log(\"particulas serian: 50: \" + this.cantparticles);\n        } else {\n          this.cantparticles = 5;\n          console.log(\"particulas serian: 5: \" + this.cantparticles);\n        }\n      });\n    }\n\n    load() {\n      /*  console.log(\"carga la funcion load()\");\r\n      return import('../app/secciones/webapp/webappmarco/sobremi/sobremi.module').then(m => m.SobremiModule); */\n    }\n\n    onMouseover() {\n      this.render.setStyle(this.btncontainer.nativeElement, \"background-color\", \"white\");\n      this.render.setStyle(this.textobtn.nativeElement, \"color\", \"blue\");\n    }\n\n    onMouseout() {\n      this.render.setStyle(this.btncontainer.nativeElement, \"background-color\", \"transparent\");\n      this.render.setStyle(this.textobtn.nativeElement, \"color\", \"white\");\n    }\n\n    _toggleSidebar() {\n      this._opened = !this._opened;\n      console.log(\"booleano: \" + this._opened);\n    } //aca recibiendo evento al presionar img desde nuevo hero component\n\n\n    scrollView(el) {\n      el.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n    /* VAMOS A PROBAR CUANDO EL SCROLL LLEGUE AL FINAL DE LA PAGINA abrir sobremi page*/\n\n\n    onScroll() {\n      if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 300) {\n        if (this.counter == 1 && this.currentRoute == \"/nuevohero\") {\n          /* console.log(\"contador en onScroll dentro del if: \"+this.counter); */\n          this.route.navigateByUrl(\"/sobremi\");\n          this.counter = 0;\n        }\n      } // cuando pase la mitad de webapp mostrar flecha else: esconder flecha\n\n\n      if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 500) {\n        this.isFlechaHidden = false;\n        /* console.log(\"escondemos la flecha?: false \"+this.isFlechaHidden); */\n\n        this.flechaserv.flechaEstado(this.isFlechaHidden);\n      } else {\n        this.isFlechaHidden = true;\n        /* console.log(\"escondemos la flecha?: true \"+this.isFlechaHidden);  */\n\n        this.flechaserv.flechaEstado(this.isFlechaHidden);\n      }\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.ViewportScroller), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.BodyToggleService), i0.ɵɵdirectiveInject(i4.FlechaStateService), i0.ɵɵdirectiveInject(i5.BackgroundToggleService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    viewQuery: function AppComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 7);\n        i0.ɵɵviewQuery(_c2, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.body = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.btncontainer = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textobtn = _t.first);\n      }\n    },\n    hostBindings: function AppComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"scroll\", function AppComponent_scroll_HostBindingHandler() {\n          return ctx.onScroll();\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    outputs: {\n      boleanoEmitir: \"boleanoEmitir\"\n    },\n    decls: 8,\n    vars: 2,\n    consts: [[3, \"id\", \"options\", \"particlesLoaded\", \"particlesInit\"], [\"id\", \"nuevohero\", 1, \"nuevohero\"], [\"arriba\", \"\"], [3, \"dioClick\"], [\"id\", \"webapp\"], [\"div\", \"\"], [3, \"dioClickFlecha\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelement(0, \"app-botonswitch\");\n        i0.ɵɵelementStart(1, \"ng-particles\", 0);\n        i0.ɵɵlistener(\"particlesLoaded\", function AppComponent_Template_ng_particles_particlesLoaded_1_listener($event) {\n          return ctx.particlesLoaded($event);\n        })(\"particlesInit\", function AppComponent_Template_ng_particles_particlesInit_1_listener($event) {\n          return ctx.particlesInit($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1, 2)(4, \"app-nuevohero\", 3);\n        i0.ɵɵlistener(\"dioClick\", function AppComponent_Template_app_nuevohero_dioClick_4_listener() {\n          i0.ɵɵrestoreView(_r2);\n\n          const _r1 = i0.ɵɵreference(6);\n\n          return ctx.scrollView(_r1);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 4, 5)(7, \"app-webappmarco\", 6);\n        i0.ɵɵlistener(\"dioClickFlecha\", function AppComponent_Template_app_webappmarco_dioClickFlecha_7_listener() {\n          i0.ɵɵrestoreView(_r2);\n\n          const _r0 = i0.ɵɵreference(3);\n\n          return ctx.scrollView(_r0);\n        });\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"id\", ctx.id)(\"options\", ctx.particlesOptions);\n      }\n    },\n    directives: [i6.BotonswitchComponent, i7.NgParticlesComponent, i8.NuevoheroComponent, i9.WebappmarcoComponent],\n    styles: [\"*[_ngcontent-%COMP%]{scroll-behavior:smooth}div[_ngcontent-%COMP%]{text-align:left}.container-fluid[_ngcontent-%COMP%]{height:100vh}.internofluid[_ngcontent-%COMP%]{height:100%}.box1[_ngcontent-%COMP%], .box2[_ngcontent-%COMP%], .box3[_ngcontent-%COMP%]{height:300px;background:red}.segundodiv[_ngcontent-%COMP%]{height:500px}.containerbtn[_ngcontent-%COMP%]{display:none;background:green;height:400px;width:150px}.containerbtn[_ngcontent-%COMP%]   .ng-sidebar[_ngcontent-%COMP%]{background:red;width:10rem}canvas[_ngcontent-%COMP%]{background-color:red!important}\"],\n    data: {\n      animation: [\n        /* slider, */\n\n        /* transform, */\n      ]\n    }\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}