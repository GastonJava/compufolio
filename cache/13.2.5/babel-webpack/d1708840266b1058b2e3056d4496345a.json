{"ast":null,"code":"import { __awaiter } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport { tsParticles } from 'tsparticles';\nlet NgParticlesComponent = /*#__PURE__*/(() => {\n  class NgParticlesComponent {\n    constructor() {\n      this.particlesLoaded = new EventEmitter();\n    }\n\n    ngAfterViewInit() {\n      const cb = container => {\n        this.particlesLoaded.emit(container);\n      };\n\n      (() => __awaiter(this, void 0, void 0, function* () {\n        if (this.particlesInit) {\n          yield this.particlesInit(tsParticles);\n        }\n\n        if (this.url) {\n          if (this.id) {\n            tsParticles.loadJSON(this.id, this.url).then(cb);\n          } else {\n            tsParticles.loadJSON(this.url).then(cb);\n          }\n        } else if (this.options) {\n          if (this.id) {\n            tsParticles.load(this.id, this.options).then(cb);\n          } else {\n            tsParticles.load(this.options).then(cb);\n          }\n        } else {\n          console.error('You must specify options or url to load tsParticles');\n        }\n      }))();\n    }\n\n  }\n\n  NgParticlesComponent.ɵfac = function NgParticlesComponent_Factory(t) {\n    return new (t || NgParticlesComponent)();\n  };\n\n  NgParticlesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgParticlesComponent,\n    selectors: [[\"ng-particles\"]],\n    inputs: {\n      options: \"options\",\n      url: \"url\",\n      id: \"id\",\n      particlesInit: \"particlesInit\"\n    },\n    outputs: {\n      particlesLoaded: \"particlesLoaded\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"id\"]],\n    template: function NgParticlesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"id\", ctx.id);\n      }\n    },\n    encapsulation: 2\n  });\n  return NgParticlesComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ParticlesComponent = /*#__PURE__*/(() => {\n  class ParticlesComponent extends NgParticlesComponent {\n    constructor() {\n      super(...arguments);\n      this.particlesLoaded = new EventEmitter();\n    }\n\n  }\n\n  ParticlesComponent.ɵfac = /* @__PURE__ */function () {\n    let ɵParticlesComponent_BaseFactory;\n    return function ParticlesComponent_Factory(t) {\n      return (ɵParticlesComponent_BaseFactory || (ɵParticlesComponent_BaseFactory = i0.ɵɵgetInheritedFactory(ParticlesComponent)))(t || ParticlesComponent);\n    };\n  }();\n\n  ParticlesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ParticlesComponent,\n    selectors: [[\"Particles\"]],\n    inputs: {\n      options: \"options\",\n      url: \"url\",\n      id: \"id\",\n      particlesInit: \"particlesInit\"\n    },\n    outputs: {\n      particlesLoaded: \"particlesLoaded\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"id\"]],\n    template: function ParticlesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"id\", ctx.id);\n      }\n    },\n    encapsulation: 2\n  });\n  return ParticlesComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NgParticlesModule = /*#__PURE__*/(() => {\n  class NgParticlesModule {}\n\n  NgParticlesModule.ɵfac = function NgParticlesModule_Factory(t) {\n    return new (t || NgParticlesModule)();\n  };\n\n  NgParticlesModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgParticlesModule\n  });\n  NgParticlesModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[]]\n  });\n  return NgParticlesModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * Public API Surface of ng-particles\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NgParticlesComponent, NgParticlesModule, ParticlesComponent }; //# sourceMappingURL=ng-particles.mjs.map","map":null,"metadata":{},"sourceType":"module"}