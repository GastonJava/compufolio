{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\n/** SystemJsNgModuleLoader  */\n\nimport { from } from \"rxjs\";\nimport { filter, map } from \"rxjs/operators\";\nimport { DOCUMENT } from \"@angular/common\";\nimport { NavigationStart } from \"@angular/router\";\nimport { gsap } from 'gsap';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./secciones/nuevohero/servicios/bodyToggle.service\";\nimport * as i4 from \"./secciones/nuevohero/servicios/flechaState.service\";\nimport * as i5 from \"./secciones/nuevohero/servicios/backgroundToggle.service\";\nconst _c0 = [\"body\"];\nconst _c1 = [\"btncontainer\"];\nconst _c2 = [\"textobtn\"];\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(document, render, viewport, route, routeActivated, bodyserv, flechaserv, stateserv) {\n      this.document = document;\n      this.render = render;\n      this.viewport = viewport;\n      this.route = route;\n      this.routeActivated = routeActivated;\n      this.bodyserv = bodyserv;\n      this.flechaserv = flechaserv;\n      this.stateserv = stateserv;\n      /* CARGANDO CIRCULO */\n\n      this.showOverlay = true;\n      this._opened = false;\n      this.title = \"Gaston Ale Dev\";\n      this.over = false; //========== contador de veces quellega al bottom\n\n      this.counter = 0;\n      /* ESTE EVENTO SERA TRIGGER COMPONENTE SOBREMI AL CARGARSE APP COMPONENT ROOT */\n\n      this.boleanoEmitir = new EventEmitter();\n    }\n\n    ngOnInit() {\n      this.counter++;\n      this.isVideo$ = this.stateserv.state$.pipe(map(state => state.bgToggle));\n      this.route.events.subscribe(ruta => {\n        if (ruta instanceof NavigationStart) {\n          console.log(\"inicia ahora el navigationStart\");\n          this.currentRoute = ruta.url;\n          console.log(\"RUTA ACTUAL DE APP COMPONENT: \" + this.currentRoute);\n\n          if (this.currentRoute == \"/nuevohero\" || this.currentRoute == \"/\") {\n            this.currentRoute = \"/nuevohero\";\n            console.log(\"TIENE QUE QUEDARSE EN HERO\");\n          } else {\n            console.log(\"TIENE QUE BAJAR A WEBAPP\");\n            window.scrollTo(0, document.body.scrollHeight);\n          }\n        }\n      });\n      gsap.from('.hero__subtitulo', {\n        y: 40,\n        duration: 0.5,\n        delay: 1.5\n      });\n      gsap.from('.hero__subtitulo1', {\n        y: 50,\n        duration: 0.5,\n        delay: 2\n      });\n      /* this.scrollgsap(); */\n\n      this.boleanoEmitir.emit(true); //create the \"Hello world\" observable\n\n      const myObs = from(\"HOLA GASTON\"); //apply the filter operator\n\n      const filteredObs = myObs.pipe(filter(char => char != \" \")); //subscribe to the filtered observable\n\n      const subscription = filteredObs.subscribe(char => console.log(char)); //this.load();\n    }\n\n    ngAfterViewInit() {}\n\n    load() {}\n\n    onMouseover() {\n      this.render.setStyle(this.btncontainer.nativeElement, \"background-color\", \"white\");\n      this.render.setStyle(this.textobtn.nativeElement, \"color\", \"blue\");\n    }\n\n    onMouseout() {\n      this.render.setStyle(this.btncontainer.nativeElement, \"background-color\", \"transparent\");\n      this.render.setStyle(this.textobtn.nativeElement, \"color\", \"white\");\n    }\n\n    _toggleSidebar() {\n      this._opened = !this._opened;\n      console.log(\"booleano: \" + this._opened);\n    } //aca recibiendo evento al presionar img desde nuevo hero component\n\n\n    scrollView(el) {\n      el.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n    /* VAMOS A PROBAR CUANDO EL SCROLL LLEGUE AL FINAL DE LA PAGINA abrir sobremi page*/\n\n\n    onScroll() {\n      if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 300) {\n        if (this.counter == 1 && this.currentRoute == \"/nuevohero\") {\n          /* console.log(\"contador en onScroll dentro del if: \"+this.counter); */\n          this.route.navigateByUrl(\"/sobremi\");\n          this.counter = 0;\n        }\n      } // cuando pase la mitad de webapp mostrar flecha else: esconder flecha\n\n\n      if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 500) {\n        this.isFlechaHidden = false;\n        /* console.log(\"escondemos la flecha?: false \"+this.isFlechaHidden); */\n\n        this.flechaserv.flechaEstado(this.isFlechaHidden);\n      } else {\n        this.isFlechaHidden = true;\n        /* console.log(\"escondemos la flecha?: true \"+this.isFlechaHidden);  */\n\n        this.flechaserv.flechaEstado(this.isFlechaHidden);\n      }\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.ViewportScroller), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.BodyToggleService), i0.ɵɵdirectiveInject(i4.FlechaStateService), i0.ɵɵdirectiveInject(i5.BackgroundToggleService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    viewQuery: function AppComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 7);\n        i0.ɵɵviewQuery(_c2, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.body = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.btncontainer = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textobtn = _t.first);\n      }\n    },\n    hostBindings: function AppComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"scroll\", function AppComponent_scroll_HostBindingHandler() {\n          return ctx.onScroll();\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    outputs: {\n      boleanoEmitir: \"boleanoEmitir\"\n    },\n    decls: 8,\n    vars: 2,\n    consts: [[3, \"id\", \"options\", \"particlesLoaded\", \"particlesInit\"], [\"id\", \"nuevohero\", 1, \"nuevohero\"], [\"arriba\", \"\"], [3, \"dioClick\"], [\"id\", \"webapp\"], [\"div\", \"\"], [3, \"dioClickFlecha\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelement(0, \"app-botonswitch\");\n        i0.ɵɵelementStart(1, \"ng-particles\", 0);\n        i0.ɵɵlistener(\"particlesLoaded\", function AppComponent_Template_ng_particles_particlesLoaded_1_listener($event) {\n          return ctx.particlesLoaded($event);\n        })(\"particlesInit\", function AppComponent_Template_ng_particles_particlesInit_1_listener($event) {\n          return ctx.particlesInit($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1, 2)(4, \"app-nuevohero\", 3);\n        i0.ɵɵlistener(\"dioClick\", function AppComponent_Template_app_nuevohero_dioClick_4_listener() {\n          i0.ɵɵrestoreView(_r2);\n\n          const _r1 = i0.ɵɵreference(6);\n\n          return ctx.scrollView(_r1);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 4, 5)(7, \"app-webappmarco\", 6);\n        i0.ɵɵlistener(\"dioClickFlecha\", function AppComponent_Template_app_webappmarco_dioClickFlecha_7_listener() {\n          i0.ɵɵrestoreView(_r2);\n\n          const _r0 = i0.ɵɵreference(3);\n\n          return ctx.scrollView(_r0);\n        });\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"id\", ctx.id)(\"options\", ctx.particlesOptions);\n      }\n    },\n    styles: [\"*[_ngcontent-%COMP%]{scroll-behavior:smooth}div[_ngcontent-%COMP%]{text-align:left}.container-fluid[_ngcontent-%COMP%]{height:100vh}.internofluid[_ngcontent-%COMP%]{height:100%}.box1[_ngcontent-%COMP%], .box2[_ngcontent-%COMP%], .box3[_ngcontent-%COMP%]{height:300px;background:red}.segundodiv[_ngcontent-%COMP%]{height:500px}.containerbtn[_ngcontent-%COMP%]{display:none;background:green;height:400px;width:150px}.containerbtn[_ngcontent-%COMP%]   .ng-sidebar[_ngcontent-%COMP%]{background:red;width:10rem}canvas[_ngcontent-%COMP%]{background-color:red!important}\"],\n    data: {\n      animation: [\n        /* slider, */\n\n        /* transform, */\n      ]\n    }\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}